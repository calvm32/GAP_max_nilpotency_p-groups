<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Francy_Graphs">
<Heading>Francy Graphs</Heading>

 A graph is visual representation or a diagram that represents data or values in an organized mode.
 With Francy, it is possible to build direct and indirect <C>Graphs</C>.
 <P/>
 Please see examples section.
 <P/>
 Please see Francy-JS for client implementation.
<Section Label="Chapter_Francy_Graphs_Section_Categories">
<Heading>Categories</Heading>

 In this section we show all Francy Graph Categories.
<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraph" Label="for IsFrancyObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>Graph</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraphType" Label="for IsFrancyObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>GraphType</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraphDefaults" Label="for IsFrancyDefaultObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>GraphDefaults</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShape" Label="for IsFrancyObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>Shape</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShapeType" Label="for IsFrancyObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>ShapeType</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShapeDefaults" Label="for IsFrancyDefaultObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>ShapeDefaults</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsLink" Label="for IsFrancyObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>Link</C> objects.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsLinkDefaults" Label="for IsFrancyDefaultObject"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Identifies <C>LinkDefaults</C> objects.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Graphs_Section_Families">
<Heading>Families</Heading>

 In this section we show all Francy Graph Families.
</Section>


<Section Label="Chapter_Francy_Graphs_Section_Representations">
<Heading>Representations</Heading>

 In this section we show all Francy Graph Representations.
<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraphRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>Graph</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraphDefaultsRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>GraphDefaults</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsFrancyGraphTypeRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>GraphType</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShapeRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>Shape</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShapeDefaultsRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>ShapeDefaults</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsShapeTypeRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>ShapeType</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsLinkRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>Link</C> internal representation.
 </Description>
</ManSection>


<ManSection>
  <Filt Arg="arg" Name="IsLinkDefaultsRep" Label="for IsComponentObjectRep"/>
 <Returns><K>true</K> or <K>false</K>
</Returns>
 <Description>
 Checks whether an <C>Object</C> has a <C>LinkDefaults</C> internal representation.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Graphs_Section_Operations">
<Heading>Operations</Heading>

 In this section we show all Francy Graph Operations.
<ManSection>
  <Oper Arg="IsFrancyGraphType[, IsFrancyGraphDefaults]" Name="Graph" Label="for IsFrancyGraphType, IsFrancyGraphDefaults"/>
 <Returns><C>Graph</C>
</Returns>
 <Description>
 Every object will be a subclass of this <C>Graph</C>. All the objects contain the same base information.
 <P/>
 Examples:
 <P/>
 Create a simple <C>Graph</C> of type <C>GraphType.DIRECTED</C> with simple <C>Shape</C> and connected with <C>Links</C>:
<#Include Label="Example_Create_Graph_2">

 <P/>
 Create a simple <C>Graph</C> of type <C>GraphType.UNDIRECTED</C> with simple <C>Shape</C> and with a <C>TriggerEvent.RIGHT_CLICK</C> <C>Callback</C>:
<#Include Label="Example_Create_Graph_3">

 <P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg" Name="UnsetNodes" Label="for IsFrancyGraph"/>
 <Description>
 Removes all nodes from a graph.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg" Name="UnsetLinks" Label="for IsFrancyGraph"/>
 <Description>
 Removes all nodes from a graph.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, [IsLink, List(IsLink)]" Name="Add" Label="for IsFrancyGraph, IsLink"/>
 <Returns><C>Graph</C>
</Returns>
 <Description>
 Add <C>IsLink</C> to a specific <C>Graph</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, [IsLink, List(IsLink)]" Name="Remove" Label="for IsFrancyGraph, IsLink"/>
 <Returns><C>Graph</C>
</Returns>
 <Description>
 Remove <C>IsLink</C> from a specific <C>Graph</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, [IsShape, List(IsShape)]" Name="Add" Label="for IsFrancyGraph, IsShape"/>
 <Returns><C>Graph</C>
</Returns>
 <Description>
 Add <C>IsShape</C> to a specific <C>Graph</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, [IsShape, List(IsShape)]" Name="Remove" Label="for IsFrancyGraph, IsShape"/>
 <Returns><C>Graph</C>
</Returns>
 <Description>
 Remove <C>IsShape</C> from a specific <C>Graph</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShapeType[, IsString(title), IsShapeDefaults]" Name="Shape" Label="for IsShapeType, IsString, IsShapeDefaults"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Every object will be a subclass of <C>Shape</C> object. All the objects contain the same base information.
 <P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, IsString" Name="GetShape" Label="for IsFrancyGraph, IsString"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Gets a <C>Shape</C> node from a <C>Graph</C> by ID.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, IsString" Name="GetShapes" Label="for IsFrancyGraph"/>
 <Returns><C>List(Shape)</C>
</Returns>
 <Description>
 Gets a <C>Shape</C> node from a <C>Graph</C> by ID.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsMenu, List(IsMenu)]" Name="Add" Label="for IsShape, IsMenu"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Add a <C>Menu</C> to a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsMenu, List(IsMenu)]" Name="Remove" Label="for IsShape, IsMenu"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Remove a <C>Menu</C> from a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsCallback, List(IsCallback)]" Name="Add" Label="for IsShape, IsCallback"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Add a <C>Callback</C> to a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsCallback, List(IsCallback)]" Name="Remove" Label="for IsShape, IsCallback"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Remove a <C>Callback</C> from a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsFrancyMessage, List(IsFrancyMessage)]" Name="Add" Label="for IsShape, IsFrancyMessage"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Add a <C>Callback</C> to a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, [IsFrancyMessage, List(IsFrancyMessage)]" Name="Remove" Label="for IsShape, IsFrancyMessage"/>
 <Returns><C>Shape</C>
</Returns>
 <Description>
 Remove a <C>Callback</C> from a specific <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape IsShape" Name="Link" Label="for IsShape, IsShape, IsLinkDefaults"/>
 <Returns><C>Link</C>
</Returns>
 <Description>
 Creates a <C>Link</C> or edge between the two <C>Shape</C>.
 <P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="List(IsShape), List(IsShape)" Name="Links" Label="for IsList, IsList, IsLinkDefaults"/>
 <Returns><C>List(Link)</C>
</Returns>
 <Description>
 Creates a <C>Link</C> or edge between the <C>Shape</C> of the first list and the <C>Shape</C> of the second list.
 <P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, IsString" Name="GetLink" Label="for IsFrancyGraph, IsString"/>
 <Returns><C>Link</C>
</Returns>
 <Description>
 Gets a <C>Link</C> or edge from a graph by ID.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsFrancyGraph, IsString" Name="GetLinks" Label="for IsFrancyGraph"/>
 <Returns><C>List(Link)</C>
</Returns>
 <Description>
 Gets a <C>Link</C> or edge from a graph.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Francy_Graphs_Section_Global">
<Heading>Global</Heading>

 In this section we show all Global Callback Francy Records for multi purpose.
</Section>


<Section Label="Chapter_Francy_Graphs_Section_Attributes">
<Heading>Attributes</Heading>

 In this section we show all Francy Core Attributes
<ManSection>
  <Attr Arg="arg" Name="Title" Label="for IsShape"/>
 <Returns><C>IsString</C> with the title of the object
</Returns>
 <Description>
 Sets the <C>Shape</C> label title.
 Supports TeX syntax and will be Typeset, if supported by the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Title" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsRequiredArg, IsString" Name="SetTitle" Label="for IsShape, IsString"/>
 <Description>
 Sets the <C>Shape</C> label title.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Color" Label="for IsShape"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Color</C> of the current <C>Shape</C>. This should be an hexadecimal colour value, e.g.: #ff0000
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Color" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsString" Name="SetColor" Label="for IsShape, IsString"/>
 <Description>
 Sets the <C>Color</C> value. This should be an hexadecimal colour value, e.g.: #ff0000
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="PosX" Label="for IsShape"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The Position in the X Axis of the <C>Shape</C> in the <C>Canvas</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="PosX" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsInt" Name="SetPosX" Label="for IsShape, IsInt"/>
 <Description>
 Sets the Position in the X Axis of the <C>Shape</C> in the <C>Canvas</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="PosY" Label="for IsShape"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The Position in the Y Axis of the <C>Shape</C> in the <C>Canvas</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="PosY" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsInt" Name="SetPosY" Label="for IsShape, IsInt"/>
 <Description>
 Sets the Position in the Y Axis of the <C>Shape</C> in the <C>Canvas</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Size" Label="for IsShape"/>
 <Returns><C>IsPosInt</C>
</Returns>
 <Description>
 The <C>Size</C> of the <C>Shape</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Size" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsPosInt" Name="SetSize" Label="for IsShape, IsPosInt"/>
 <Description>
 Sets the <C>Size</C> of the <C>Shape</C> in pixels.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Layer" Label="for IsShape"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Layer</C> level in which the node will be placed.
 This property might also be used to apply a different color depending on the layer level.
 Depends on the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Layer" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsInt" Name="SetLayer" Label="for IsShape, IsInt"/>
 <Description>
 Sets the <C>Layer</C> number on a <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="ParentShape" Label="for IsShape"/>
 <Returns><C>IsShape</C>
</Returns>
 <Description>
 The <C>ParentShape</C> in which the node will be placed.
 This property might also be used to apply a different color depending on the parent level.
 Depends on the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="ParentShape" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsShape" Name="SetParentShape" Label="for IsShape, IsShape"/>
 <Description>
 Sets the <C>ParentShape</C> on a <C>Shape</C>.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Simulation" Label="for IsFrancyGraph"/>
 <Returns><C>IsBool</C> True if enabled otherwise False
</Returns>
 <Description>
 <C>Simulation</C> is a property that sets the simulation behavior by applying forces to organize the graphics,
 without the need to provide custom positions on the rendered GUI. Depends on the client implementation.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Simulation" Label="for IsFrancyGraph"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsCanvas, IsBool" Name="SetSimulation" Label="for IsFrancyGraph, IsBool"/>
 <Description>
 Sets the <C>Simulation</C> behavior, as per de description above.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Collapsed" Label="for IsFrancyGraph"/>
 <Returns><C>IsBool</C> True if enabled otherwise False
</Returns>
 <Description>
 <C>Collapsed</C> is a property that sets <C>Graph</C> Tree structures to fold by default on the rendered GUI.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Collapsed" Label="for IsFrancyGraph"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsCanvas, IsBool" Name="SetCollapsed" Label="for IsFrancyGraph, IsBool"/>
 <Description>
 Sets the <C>Collapsed</C> behavior, as per the description above.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Selected" Label="for IsShape"/>
 <Returns><C>IsBool</C> True if enabled otherwise False
</Returns>
 <Description>
 <C>Selected</C> is a property that sets <C>Shape</C> objects as selected by default on the rendered GUI.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Selected" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsCanvas, IsBool" Name="SetSelected" Label="for IsShape, IsBool"/>
 <Description>
 Sets the <C>Selected</C> behavior, as per the description above.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="ConjugateId" Label="for IsShape"/>
 <Returns><C>IsBool</C> True if enabled otherwise False
</Returns>
 <Description>
 <C>ConjugateId</C> is a property that is used to group <C>Shape</C> objects by default on the rendered GUI.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="ConjugateId" Label="for IsShape"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsCanvas, IsBool" Name="SetConjugateId" Label="for IsShape, IsInt"/>
 <Description>
 Sets the <C>Conjugate</C> behavior, as per the description above.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Weight" Label="for IsLink"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Weight</C> of the current <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Weight" Label="for IsLink"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsLink, IsInt" Name="SetWeight" Label="for IsLink, IsInt"/>
 <Description>
 Sets the <C>Weight</C> value on a <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Length" Label="for IsLink"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Length</C> of the current <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Length" Label="for IsLink"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsLink, IsInt" Name="SetLength" Label="for IsLink, IsInt"/>
 <Description>
 Sets the <C>Length</C> value on a <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Invisible" Label="for IsLink"/>
 <Returns><C>IsBoolean</C>
</Returns>
 <Description>
 The <C>Invisible</C> property of the current <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Invisible" Label="for IsLink"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsLink, IsBool" Name="SetInvisible" Label="for IsLink, IsBool"/>
 <Description>
 Sets the <C>Invisible</C> property value on a <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Color" Label="for IsLink"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Color</C> of the current <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Color" Label="for IsLink"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsString" Name="SetColor" Label="for IsLink, IsString"/>
 <Description>
 Sets the <C>Color</C> value on a <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="Title" Label="for IsLink"/>
 <Returns><C>IsInt</C>
</Returns>
 <Description>
 The <C>Title</C> of the current <C>Link</C> or edge.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="arg1" Name="Title" Label="for IsLink"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="IsShape, IsString" Name="SetTitle" Label="for IsLink, IsString"/>
 <Description>
 Sets the <C>Title</C> value  on a <C>Link</C> or edge.
 </Description>
</ManSection>


</Section>


</Chapter>

